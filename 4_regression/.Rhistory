demo()
demo(plotmath)
contour(volcano)
elevation<-matrix(1,100,100)
elevation[4,6:10]<-0
contour(elevation)
persp(elevation)
persp(elevation, expand=0.2)
contour(volcano)
volcano
persp(volcano)
persp(volcano, expand=0.2)
image(volcano)
help(image)
image(volcano, rainbow)
image(volcano)
help(seq)
pwm<-c(seq.int(25,250,25))
plot(voltage, current2)
current2 <- c(0.33, 0.66, 0.98, 1.30, 1.62, 1.94, 2.26, 2.59, 2.91)
plot(voltage, current2)
source('~/Desktop/Electronics:Computers/R/test arduino pwm vs voltage.R')
source('~/Desktop/Electronics:Computers/R/test arduino pwm vs voltage.R')
source('~/Desktop/Electronics:Computers/R/test arduino pwm vs voltage.R')
install.packages("swirl")
library("swirl")
swirl
swirl()
5+&
5+7
bye()
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
cd rstats
dir.create(rstats)
dir.create?
dir.create(tesdir)
dir.create('testdir')
setwd('testdir')
file.create(mytest.R)
file.create('mytest.R')
ls
list.files
list.files()
file.exists?
help(file.exists)
file.exists("mytest.R")
help(file.info)
file.info("mytest.R")
file.rename?
?file.rename
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1", "folder2")
?dir.create
?
dir.create("testdir2")
dir.create(file.path('tesdir2', 'testdir3'), recursive = TRUE)
info()
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
file.path(getwd())
play()
file.path((getwd()))
setwd('..')
getwd()
?unlink()
nxt()
setwd(/Users/Robert)
setwd('/Users/Robert')
setwd(old.dir)
unlink('testdir', recursive = TRUE)
swirl()
swirl()
load.packages
library("swirl")
ls
ls()
rm(list = ls())
ls
ls()
swirl()
1:20
pi:10
15:1
?
?':'
?seq
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, length = 30)
my_seq <- seq(5,19, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
?rep
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- (num_vect < 1)
tf <- num_vect < 1
print(tf)
tf
num_vect >= 6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
play()
?paste
nxt()
my_name <- c(my_char, "Robert")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl()
swirlstats()
library("swirl")
swirl()
c(0.5,55-10,6)
quit
quit()
bye()
swirl()
setwd("~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression")
ds = read.csv("Position_Salaries.csv")
View(ds)
ds = ds[,1:2]
ds = read.csv("Position_Salaries.csv")
ds = ds[,2:3]
lin_reg = lm(Salary ~ Level,
data = ds)
summary(lin_reg)
library(ggplot2)
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary), color = 'red')
X_grid = seq(min(ds$Level), max(ds$Level), 1000)
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary), color = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data =X_grid )))
X_grid = seq(min(ds$Level), max(ds$Level), 1000)
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary),
color = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data =X_grid )),
color = 'blue') +
ggtitle("Salary vs level of experience") +
xlab("Level of experience") +
ylab("Salary")
ds_poly = ds
ds_poly$Level2 = ds$Level^2
ds_poly$Level3 = ds$Level^3
View(ds_poly)
poly_reg = lm(Salary ~.,
data = ds)
summary(poly_reg)
ds_poly = ds
ds_poly$Level2 = ds$Level^2
ds_poly$Level3 = ds$Level^3
poly_reg = lm(Salary ~.,
data = ds)
summary(poly_reg)
ds_poly = ds
ds_poly$Level2 = ds$Level^2
ds_poly$Level3 = ds$Level^3
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
X_grid = seq(min(ds$Level), max(ds$Level), 1000)
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary),
color = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data =X_grid )),
color = 'blue') +
geom_line(aes(x=ds$level, y = predict(poly_reg, new_data = X_grid)),
color = 'green')
ggtitle("Salary vs level of experience") +
xlab("Level of experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary),
color = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data =X_grid )),
color = 'blue') +
geom_line(aes(x=ds$level, y = predict(poly_reg, new_data = X_grid)),
color = 'green') +
ggtitle("Salary vs level of experience") +
xlab("Level of experience") +
ylab("Salary")
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary),
color = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data =X_grid )),
color = 'blue') +
geom_line(aes(x=ds$Level, y = predict(poly_reg, new_data =X_grid )),
color = 'green') +
ggtitle("Salary vs level of experience") +
xlab("Level of experience") +
ylab("Salary")
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
predict(poly_reg, 6.5 )
predict(poly_reg, new_data = 6.5 )
predict(lin_Reg,6.5)
predict(lin_reg,6.5)
predict(lin_reg, data.frame(6.5))
predict(lin_reg, data.frame(Level = 6.5))
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2
Level3 = 6.5^3))
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3))
y_pred
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
View(ds_poly)
ds_poly = ds
ds_poly$Level2 = ds$Level^2
ds_poly$Level3 = ds$Level^3
ds_poly$Level4 = ds$Level^4
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
poly_reg = lm(Salary ~.,
data = ds_poly)
summary(poly_reg)
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
poly_reg = lm(Salary~poly(ds$Level, 3))
poly_reg = lm(Salary~poly(Level, 3),
data = ds)
poly_reg = lm(Salary~poly(Level, 3),
data = ds)
y_pred = predict(poly_reg,ds)
y_pred
y_pred = predict(poly_reg,data.frame(x=Level))
poly_reg = lm(Salary~poly(Level, 4),
data = ds)
y_pred = predict(poly_reg,poly(6.5,4))
poly_reg = lm(Salary~poly(Level, 3),
data = ds)
y_pred = predict(poly_reg,poly(6.5,3))
poly_reg = lm(Salary~poly(Level, 4),
data = ds)
poly_reg = lm(Salary~poly(Level, 4),
data = ds)
y_pred = predict(poly_reg,6.5)
y_pred = predict(poly_reg, data.frame(6.5))
y_pred = predict(poly_reg, data.frame(Level =6.5))
y_pred
ggplot() +
geom_point(aes(x= ds$Level, y = ds$Salary),
colour = 'red') +
geom_line(aes(x=ds$Level, y = predict(lin_reg, new_data = X_grid)),
colour = 'blue') +
geom_line(aes(x=ds$Level, y = predict(poly_reg, new_data = X_grid)),
colour = 'black') +
ggtitle("Salary vs level of experience") +
xlab("Level of experience") +
ylab("Salary")
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_polyregression/polyreg.r', echo=TRUE)
setwd("~/Desktop/Comsci/machine_learning/Udemy_ML/4_regression")
dataset = read.csv('Position_Salaries.csv')
dataset = read.csv('Position_Salaries.csv')
View(dataset)
dataset = dataset[1:2]
View(dataset)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library('e1071')
install.packages("e1071")
install.packages(c("acepack", "boot", "class", "cluster", "codetools", "colorspace", "fields", "foreign", "formatR", "ggplot2", "gridExtra", "gtable", "highr", "Hmisc", "htmltools", "jsonlite", "KernSmooth", "knitr", "lattice", "latticeExtra", "manipulate", "maps", "maptools", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "nnet", "openssl", "plyr", "proto", "Rcpp", "reshape2", "rmarkdown", "rpart", "rworldmap", "scales", "sp", "spam", "spatial", "stringi", "stringr", "survival", "swirl", "yaml"))
library('e1071')
library(e1071)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_regression/svr.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/4_regression/svr.r', echo=TRUE)
library(rpart)
library(randomForest)
install.packages("randomForest")
library(randomForest)
