dataset = read.csv('Salary_data.csv')
View(dataset)
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:caTools", unload=TRUE)
library(caTools)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
split = sample.split(dataset, SplitRatio = 0.8)
split = sample.split(dataset, SplitRatio = 2/3)
regressor = lm(Salary ~ YearsExperience, training_set)
library(caTools)
split = sample.split(dataset, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(Salary ~ YearsExperience, training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)))
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (training)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (training)') +
xlab('Years of experience') +
ylab('Salary')
setwd("~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression")
dataset = read.csv(50-Startups.csv)
dataset = read.csv("50-Startups.csv")
dataset = read.csv("50_Startups.csv")
ds = read.csv("50_Startups.csv")
View(ds)
ds = read.csv("50_Startups.csv")
library(caTools)
split = sample.split(ds, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set = subset(ds, split == TRUE)
test_set = subset(ds, split == FALSE)
ds$State = factor(ds$State,
levels = c("New York", "California", "Florida"),
labels = c(1,2,3))
regressor = lm(ds$Profit ~.)
regressor = lm(formula = ds$Profit ~.,
training_set)
regressor = lm(formula = training_set$Profit ~.,
training_set)
summary(regressor)
regressor = lm(formula = training_set$Profit ~(. - ds$State),
regressor = lm(formula = training_set$Profit ~(. - ds$State),
training_set)
summary(regressor)
regressor = lm(formula = training_set$Profit ~(. - ds$State),
training_set)
summary(regressor)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
y_pred = predict(regressor, test_set)
regressor = lm(formula = Profit ~.
data = training_set)
y_pred = predict(regressor, test_set)
regressor = lm(formula = Profit ~.
data = training_set)
y_pred = predict(regressor, newdata = test_set)
regressor = lm(formula = Profit ~.,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
summary(regressor)
y_pred
y_test
test_set$Profit
optimum_ds = ds
optimum_ds <- ds
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
summary(regressor)
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
summary(regressor_optimum)$coefficients[4]
summary(regressor_optimum)$coefficients[:, 4]
summary(regressor_optimum)$coefficients
summary(regressor_optimum)$coefficients[,4]
pvals = summary(regressor_optimum)$coefficients[,4]
max(pvals)
which.max(pvals)
ds$2
ds[2]
ds_test = ds
ds_test[2]
View(ds_test)
ds_test = ds
ds_test[2] = NULL
View(ds_test)
which.max(pvals)
ds_opt = ds
regressor_optimum = lm(formula = Profit~.,
data = ds_opt)
pvals = summary(regressor_optimum)$coefficients[,4]
summary(regressor_optimum)
View(ds_opt)
ds_opt[which.max(pvals)] = NULL
View(ds_opt)
pvals = summary(regressor_optimum)$coefficients[,4]
pvals
which.max(pvals)
ds_opt[5]
step(regressor_optimum, direction = "backward")
source('~/Desktop/Comsci/machine_learning/Udemy_ML/3_multiregression/multireg.r', echo=TRUE)
